item:
  post:
    tags:
      - item
    summary: Add a new item to LoRi
    operationId: addItem
    requestBody:
      description: Item object
      content:
        application/json:
          schema:
            $ref: 'item.model.yaml#/ItemRest'
      required: true
    responses:
      201:
        description: Item was successfully added
        content: { }
      405:
        description: Invalid input
        content: { }
    x-codegen-request-body-name: body
  put:
    tags:
      - item
    summary: Update an existing item in LoRi
    operationId: updateItem
    requestBody:
      description: Item object
      content:
        application/json:
          schema:
            $ref: 'item.model.yaml#/ItemRest'
      required: true
    responses:
      200:
        description: Item was successfully updated
        content: { }
      405:
        description: Invalid input
        content: { }
    x-codegen-request-body-name: body

item-id:
  get:
    tags:
      - item
    summary: Find item by ID
    description: Return an item entry
    operationId: getItemByIds
    parameters:
      - name: id
        in: path
        description: ID of item to return
        required: true
        schema:
          type: string
    responses:
      200:
        description: Successful operation
        content:
          application/json:
            schema:
              $ref: 'item.model.yaml#/ItemRest'
      404:
        description: Id not found
        content: { }
      500:
        description: Internal error
        content: { }
  delete:
    tags:
      - item
    summary: Delete an item
    operationId: deleteItemById
    parameters:
      - name: id
        in: path
        description: Item id to delete
        required: true
        schema:
          type: string
    responses:
      200:
        description: Deletion of item was successfull
        content: { }
      404:
        description: Id does not exist
        content: { }

item-list:
  get:
    tags:
      - item
    summary: Return a list of item items
    description: Return a list of items with offset and limit
    operationId: getItemList
    parameters:
      - name: offset
        in: query
        description: An offset.
        required: false
        schema:
          type: integer
          minimum: 0
          default: 0
      - name: limit
        in: query
        description: The number of items to return.
        schema:
          type: integer
          minimum: 1
          maximum: 100
          default: 25
        required: false
    responses:
      200:
        description: Successful operation
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: 'item.model.yaml#/ItemRest'
      400:
        description: Bad input
        content: { }
      500:
        description: Internal error
        content: { }






