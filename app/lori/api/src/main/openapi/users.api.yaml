register:
  post:
    tags:
      - users
    summary: Add a new right information to LoRi
    operationId: registerUser
    requestBody:
      description: User credentials
      content:
        application/json:
          schema:
            $ref: 'users.model.yaml#/UserRest'
      required: true
    responses:
      201:
        description: Successfully created
        content: { }
      400:
        description: Bad request
        content: { }
      409:
        description: Username already exists
        content: { }
      500:
        description: Internal error
        content: { }
    x-codegen-request-body-name: body
login:
  post:
    tags:
      - users
    summary: Login with credentials
    operationId: loginUser
    requestBody:
      description: User credentials
      content:
        application/json:
          schema:
            $ref: 'users.model.yaml#/UserRest'
      required: true
    responses:
      200:
        description: Successfully logged in
        content:
          application/json:
            schema:
              $ref: 'users.model.yaml#/AuthTokenRest'
      400:
        description: Bad request
        content: { }
      401:
        description: Login failed
        content: { }
      500:
        description: Internal error
        content: { }
    x-codegen-request-body-name: body

users-id:
  put:
    tags:
      - users
    summary: Update user data
    operationId: updateUser
    requestBody:
      description: User credentials update
      content:
        application/json:
          schema:
            $ref: 'users.model.yaml#/UserRest'
      required: true
    responses:
      204:
        description: Successfully updated
        content: { }
      400:
        description: Bad request
        content: { }
      401:
        description: Update request denied
        content: { }
      500:
        description: Internal error
        content: { }
    x-codegen-request-body-name: body
  delete:
    tags:
      - users
    summary: Delete user
    operationId: deleteUserById
    parameters:
      - name: id
        in: path
        description: User id to delete
        required: true
        schema:
          type: string
    responses:
      200:
        description: Deletion of user was successfull
        content: { }
      400:
        description: Bad request
        content: { }
      401:
        description: Delete request denied
        content: { }
      404:
        description: USer does not exist
        content: { }