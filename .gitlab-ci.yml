variables:
  VAULT_OPENJDK_IMAGE: "swr.eu-de.otc.t-systems.com/zbw-tools/vault-openjdk17:latest"

default:
  image: openjdk:17.0.1-slim

stages:
  - build
  - test
  - push

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle
  - ./gradlew --version
  - cat gradle/wrapper/gradle-wrapper.properties

build:
  stage: build
  script:
    - ./gradlew assemble
  artifacts:
    paths:
      - build/libs/*.jar
    expire_in: 1 week

test:
  stage: test
  dependencies:
    - build
  script:
    - ./gradlew check
  artifacts:
    when: always
    reports:
      junit: app/*/**/TEST-*.xml

pushServiceImages:
  stage: push
  image: $VAULT_OPENJDK_IMAGE
  variables:
    VAULT_ROLE_ID: ci-zbw-dev
  dependencies:
    - test
  only:
    - main
  script:
    - export VAULT_ADDR=https://vault.zbw.eu
    - export VAULT_TOKEN="$(vault write -field=token auth/jwt/login role=$VAULT_ROLE_ID jwt=$CI_JOB_JWT)"
    - mkdir -p ~/.docker
    - vault kv get -field=config secret/otc-credentials/docker  | base64 -d >> ~/.docker/config.json
    - export GITLAB_API_ACCESS_TOKEN="$(vault kv get --field=token secret/gitlab/api_access)"
    - ./scripts/pushServiceImages.sh
    - rm -rf ~/.docker/config.json

after_script:
  - echo "End CI"
